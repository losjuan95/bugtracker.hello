@model bugtracker.Models.ApplicationUser
@using bugtracker.Helpers
@using Microsoft.AspNet.Identity
@using bugtracker.Models
@{
    ViewBag.Title = "Edit";
    ViewBag.Title = "Manage";
    var projhelper = new ProjectHelpers();
    var rolehelper = new UserRolesHelpers();
    var currentuserId = HttpContext.Current.User.Identity.GetUserId();
    ApplicationDbContext db = new ApplicationDbContext();
    var user = db.Users.Find(currentuserId);
}
<link href="~/Content/bootstrap-fileupload.css" rel="stylesheet" />

<!--main content start-->
<section id="main-content">
    <section class="wrapper site-min-height">
        <div class="row mt">
            <div class="col-lg-12">
                <div class="row content-panel">
                    <div class="col-md-3 profile-text mt mb centered">
                        <p>
                            @if (user.AvatarPath == null)
                            {
                                <img class="avatar img img-circle" src="~/img/defaultavatar.png">
                            }
                            <img src="@user.AvatarPath" class="avatar img img-circle">
                        </p>
                        <h3>@user.FirstName</h3>
                        <h6>
                            <i class="fa fa-briefcase"></i><span>Role:</span>
                            @if (User.IsInRole("Admin") || User.IsInRole("PM") || User.IsInRole("Sub") || User.IsInRole("Devs"))
                            {

                                //rolehelper.ListUserRoles(currentuserId).FirstOrDefault().ToString();
                                var myRole = rolehelper.ListUserRoles(currentuserId).FirstOrDefault();
                                @myRole
                            }

                        </h6>
                        <br>
                        <div class="form-group">

                            @using (Html.BeginForm("ChangeAvatar", "Home", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                if (User.Identity.IsAuthenticated)
                                {
                                    <div class="form-group">
                                        <span class="btn btn-theme btn-file">
                                            <span class="fileupload fileupload-new">Change Image</span>
                                            <input name="image" type="file" class="form-control-file" id="fileUpload" />
                                            <br />

                                        </span>
                                        <button type="submit" class="btn btn-success">submit</button>
                                    </div>

                                }


                            }

                        </div>

                    </div>
                    <!-- /col-md-4 -->
                    @*<div class="col-md-4 profile-text centered">


            <div class="border-head">
                <h3>My Tickets by status</h3>
            </div>
            <div class="custom-bar-chart">
                <ul class="y-axis">
                    <li><span>5</span></li>
                    <li><span>4</span></li>
                    <li><span>3</span></li>
                    <li><span>2</span></li>
                    <li><span>1</span></li>
                    <li><span>0</span></li>
                </ul>

                    <div class="bar">
                        <div class="title">Open</div>
                        <div class="value tooltips" data-original-title="@TicketHelper.GetTicketCountByStatus("Open")" data-toggle="tooltip" data-placement="top">@TicketHelper.GetTicketPlacementByStatus("Open")</div>
                    </div>
                    <div class="bar ">
                        <div class="title">Closed</div>
                        <div class="value tooltips" data-original-title="@TicketHelper.GetTicketCountByStatus("Closed")" data-toggle="tooltip" data-placement="top">@TicketHelper.GetTicketPlacementByStatus("Closed")</div>
                    </div>
                    <div class="bar ">
                        <div class="title">On-Hold</div>
                        <div class="value tooltips" data-original-title="@TicketHelper.GetTicketCountByStatus("On-Hold")" data-toggle="tooltip" data-placement="top">@TicketHelper.GetTicketPlacementByStatus("On-Hold")</div>
                    </div>
                    <div class="bar ">
                        <div class="title">Unassigned</div>
                        <div class="value tooltips" data-original-title="@TicketHelper.GetTicketCountByStatus("Un-Assigned")" data-toggle="tooltip" data-placement="top">@TicketHelper.GetTicketPlacementByStatus("Un-Assigned")</div>
                    </div>

            </div>

        </div>*@
                    <!-- /col-md-4 -->
                    @*<div class="col-md-4 profile-text centered">
            <div class="border-head">
                <h3>My Tickets by priority</h3>
            </div>
            <div class="custom-bar-chart">
                <ul class="y-axis">
                    <li><span>5</span></li>
                    <li><span>4</span></li>
                    <li><span>3</span></li>
                    <li><span>2</span></li>
                    <li><span>1</span></li>
                    <li><span>0</span></li>
                </ul>
                <div class="bar">
                    <div class="title">High</div>
                    <div class="value tooltips" data-original-title="@TicketHelper.GetTicketCountByPriority("High")" data-toggle="tooltip" data-placement="top">@TicketHelper.GetTicketPlacementByPriority("High")</div>
                </div>
                <div class="bar ">
                    <div class="title">Medium</div>
                    <div class="value tooltips" data-original-title="@TicketHelper.GetTicketCountByPriority("Medium")" data-toggle="tooltip" data-placement="top">@TicketHelper.GetTicketPlacementByPriority("Medium")</div>
                </div>
                <div class="bar ">
                    <div class="title">Low</div>
                    <div class="value tooltips" data-original-title="@TicketHelper.GetTicketCountByPriority("Low")" data-toggle="tooltip" data-placement="top">@TicketHelper.GetTicketPlacementByPriority("Low")</div>
                </div>

            </div>

        </div>*@
                    <div class="col-md-4 profile-text centered">
                        <div id="bchart" style="height: 370px; width: 100%;">

                        </div>

                    </div>
                    <div class=" col-md-4 profile-text centered">
                        <div id="chart2" style="height: 370px; width: 100%;">

                        </div>

                    </div>
                    <!-- /col-md-4 -->
                </div>
            <!-- /row -->
        </div>
        <!-- /col-lg-12 -->
        <div class="col-lg-12 mt">
            <div class="row content-panel">
               
                <!-- /panel-heading -->
                <div class="panel-body">
                    <div class="tab-content">
                        <div id="overview" class="tab-pane active">
                            <div class="row">
                                <div class="col-md-6">

                                    <div class="detailed mt">
                                        <h4>Assigned</h4>
                                        <div class="recent-activity">
                                            <div class="activity-icon bg-theme"><i class="fa fa-check"></i></div>
                                            <div class="activity-panel">
                                                <h5>Tickets Assigned</h5>
                                                <p>Number of tickets: @db.Tickets.Where(t => t.AssignedToUserId == currentuserId).Count()</p>
                                            </div>
                                            <div class="activity-icon bg-theme02"><i class="fa fa-trophy"></i></div>
                                            <div class="activity-panel">
                                                <h5>Projects</h5>
                                                <p>Number of Projects: @projhelper.ListUserProjects(currentuserId).Count()</p>
                                            </div>

                                        </div>

                                        <!-- /recent-activity -->
                                    </div>
                                    <!-- /detailed -->
                                </div>
                                <div class="col-md-6 detailed">
                                    <h4 class="mb">Personal Information</h4>


                                    @using (Html.BeginForm("ChangeName", "Manage", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.Id)
                                        <div class="form-group">
                                            @Html.Label("firstName", "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.Editor("firstName", new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <div class="form-group">
                                            @Html.Label("lastName", "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.Editor("lastName", new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        <br />
                                        <br />
                                        <div class="row">

                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Save" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>


                                    }
                                    <br />
                                    <div class="right-divider hidden-sm hidden-xs">
                                        <dl class="dl-horizontal">
                                            <dt>Password:</dt>
                                            [
                                            @Html.ActionLink("Change Password", "ChangePassword", "Manage")
                                            ]
                                        </dl>

                                    </div>
                                </div>
                                <!-- /col-md-6 -->
                                @*<div class="col-md-6 detailed">
            @if (User.IsInRole("Admin") || User.IsInRole("PM") || User.IsInRole("Sub") || User.IsInRole("Devs"))
            {
                <h4>Ticket Statuses</h4>
                <div class="row centered mt mb">

                    <div class="col-sm-4">
                        <h1><i class="fa fa-money"></i></h1>
                        <h3>On-Hold</h3>
                        <h2>
                            @db.Tickets.Where(t => t.TicketStatus.Name == "On-Hold").Count()

                        </h2>
                    </div>
                    <div class="col-sm-4">
                        <h1><i class="fa fa-trophy"></i></h1>
                        <h3>Open</h3>
                        <h2>@db.Tickets.Where(t => t.TicketStatus.Name == "Open").Count()</h2>
                    </div>
                    <div class="col-sm-4">
                        <h1><i class="fa fa-window-close"></i></h1>
                        <h3>Closed</h3>
                        <h2>@db.Tickets.Where(t => t.TicketStatus.Name == "Closed").Count()</h2>
                    </div>




                </div>
            }

        </div>*@
                                <!-- /col-md-6 -->

                            </div>
                        </div>
                        <!-- /OVERVIEW -->
                    </div>

                    <!-- /Edit Tab -->
                   
                    <div id="edit" class="tab-pane">
                        <div class="row">
                           
                        </div>
                        <!-- /col-lg-8 -->
                    </div>
                    <!-- /row -->
                </div>
                <!-- /tab-pane -->
            </div>
            <!-- /tab-content -->
        </div>
        <!-- /panel-body -->
       
        <!-- /container -->
    </section>

</section>
@section scripts{
    <script>
        var chart = new CanvasJS.Chart("bchart", {
	        theme: "light2",
	        exportEnabled: true,
	        animationEnabled: true,
	        title: {
		    text: "My Tickets by status",
		    fontSize: 21
	        },
	        data: [{
		        type: "pie",
                startAngle: 60,
                indexLabelFontSize: 12,
		        toolTipContent: "<b>{label}</b>: {y}",
		        indexLabel: "{label} - {y}",
		        dataPoints: @Html.Raw(ViewBag.DataPoints)
	        }]
        });
        chart.render();
    </script>
    <script>
        var chart = new CanvasJS.Chart("chart2", {
                    theme: "light2",
                    exportEnabled: true,
	                animationEnabled: true,
	                title: {
                        text: "My Tickets By Priority",
                        fontSize: 21
	                },
	        data: [{
		        type: "doughnut",
		        startAngle: 60,
		        indexLabelFontSize: 12,
		        indexLabel: "{label} - {y}",
		        toolTipContent: "<b>{label}:</b> {y}",
		        dataPoints: @Html.Raw(ViewBag.DataPoints2)
	        }]
        });
    chart.render();
    </script>
    }